// src/mesh/earth.js
import * as THREE from 'three';

// 创建地球对象
export function createEarth() {
  try {
    // 使用 Vite 的静态资源处理方式
    const textureLoader = new THREE.TextureLoader();
    const basePath = '/assets/'; // 使用public/assets目录下的纹理

    // 加载纹理函数
    const loadTexture = (path) => {
      try {
        const tex = textureLoader.load(`${basePath}${path}`);
        tex.anisotropy = 8;
        return tex;
      } catch (error) {
        console.error(`加载纹理失败: ${path}`, error);
        // 返回空白纹理作为备用
        return new THREE.Texture();
      }
    };

    // 加载所有需要的纹理
    const dayTexture = loadTexture('earth_day_4096.jpg');
    dayTexture.colorSpace = THREE.SRGBColorSpace;

    const nightTexture = loadTexture('earth_night_4096.jpg');
    nightTexture.colorSpace = THREE.SRGBColorSpace;
    
    const cloudsTexture = loadTexture('earth_clouds_1024.png');
    
    const bumpTexture = loadTexture('earth_bump_roughness_clouds_4096.jpg');

    // 创建地球材质
    const globeMaterial = new THREE.MeshStandardMaterial({
      map: dayTexture,
      roughnessMap: bumpTexture,
      bumpMap: bumpTexture,
      bumpScale: 0.05,
      metalness: 0.1,
      roughness: 0.7
    });
    
    // 创建地球网格
    const sphereGeometry = new THREE.SphereGeometry(1, 64, 32);
    const globe = new THREE.Mesh(sphereGeometry, globeMaterial);
    globe.castShadow = true;
    globe.receiveShadow = true;
    
    // 创建云层
    const cloudsMaterial = new THREE.MeshStandardMaterial({ 
      map: cloudsTexture,
      transparent: true,
      opacity: 0.6,
      blending: THREE.AdditiveBlending,
      depthWrite: false,
    });
    
    const cloudsGeometry = new THREE.SphereGeometry(1.01, 48, 24);
    const clouds = new THREE.Mesh(cloudsGeometry, cloudsMaterial);
    clouds.castShadow = false;
    clouds.receiveShadow = true;
    globe.add(clouds);
    
    // 创建大气层
    const atmosphereColor = new THREE.Color('#4db2ff'); // 大气颜色（蓝色）
    
    const atmosphereMaterial = new THREE.MeshBasicMaterial({
      color: atmosphereColor,
      transparent: true,
      opacity: 0.2,
      side: THREE.BackSide,
      blending: THREE.AdditiveBlending,
      depthWrite: false
    });
    
    const atmosphereGeometry = new THREE.SphereGeometry(1.15, 48, 24);
    const atmosphere = new THREE.Mesh(atmosphereGeometry, atmosphereMaterial);
    globe.add(atmosphere);
    
    // 创建夜光材质
    const nightLightsMaterial = new THREE.MeshBasicMaterial({
      map: nightTexture,
      blending: THREE.AdditiveBlending,
      transparent: true,
      opacity: 0.5,
      depthWrite: false
    });
    
    const nightLightsGeometry = new THREE.SphereGeometry(1.001, 64, 32);
    const nightLights = new THREE.Mesh(nightLightsGeometry, nightLightsMaterial);
    globe.add(nightLights);

    // 返回创建的对象
    return {
      mesh: globe,
      clouds: clouds,
      atmosphere: atmosphere,
      material: globeMaterial,
      cloudsMaterial: cloudsMaterial,
      atmosphereMaterial: atmosphereMaterial,
      nightLightsMaterial: nightLightsMaterial
    };
  } catch (error) {
    console.error("创建地球对象失败", error);
    // 返回基本球体
    const fallbackSphere = new THREE.Mesh(
      new THREE.SphereGeometry(1, 32, 16),
      new THREE.MeshBasicMaterial({ color: 0x4444ff })
    );
    return {
      mesh: fallbackSphere,
      clouds: null,
      atmosphere: null,
      material: fallbackSphere.material,
      cloudsMaterial: null,
      atmosphereMaterial: null,
      nightLightsMaterial: null
    };
  }
}